{
	"info": {
		"_postman_id": "286b336c-7890-41fa-9976-1ec01ac63cb4",
		"name": "TRANSACTION",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19443760"
	},
	"item": [
		{
			"name": "Admin",
			"item": [
				{
					"name": "Admin Login Invalid Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User Not fount\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains('User not found');\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"salman@grr.la\",\r\n    \"password\":\"invalid password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Login Invalid Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User Not fount\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains('User not found');\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"salm@gmail.com\",\r\n    \"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Login Valid Email and Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains('Login successfully');\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var jsonData=pm.response.json();\r",
									"var token=jsonData.token;\r",
									"pm.collectionVariables.set('token',token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"email\":\"salman@roadtocareer.net\", \r\n    \"password\":\"1234\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create User",
			"item": [
				{
					"name": "Create Agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User created successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"let jsonData=pm.response.json();\r",
									"let id=jsonData.user.id;\r",
									"let phone=jsonData.user.phone_number;\r",
									"pm.collectionVariables.set('agentID',id);\r",
									"pm.collectionVariables.set('agentPhone',phone);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Darrin Stracke Sr.\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\",\r\n    \"nid\":\"123454587\",\r\n    \"role\":\"Agent\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/create",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User created successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"let jsonData=pm.response.json();\r",
									"let id=jsonData.user.id;\r",
									"let phone=jsonData.user.phone_number;\r",
									"pm.collectionVariables.set('id1',id);\r",
									"pm.collectionVariables.set('UserPhone1',phone);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Marlon Lynch\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\": \"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/create",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User created successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"let jsonData=pm.response.json();\r",
									"let id=jsonData.user.id;\r",
									"let phone=jsonData.user.phone_number;\r",
									"pm.collectionVariables.set('id2',id);\r",
									"pm.collectionVariables.set('UserPhone2',phone);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Marlon Lynch\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\": \"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/create",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Without valid email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User created successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomUserName}}\",\r\n    \"email\":\"\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\",\r\n    \"nid\":\"{{$randomUUID}}\",\r\n    \"role\": \"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/create",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Without valid Phone Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User created successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Marlo\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"\",\r\n    \"nid\":\"17854521547891\",\r\n    \"role\": \"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/create",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Without Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User created successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Marlo\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\",\r\n    \"nid\":\"1785452157412398741\",\r\n    \"role\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/create",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Details",
			"item": [
				{
					"name": "Get User Using Valid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/user/search?id={{id1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"search"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Witih Invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/user/search?id=7895",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"search"
							],
							"query": [
								{
									"key": "id",
									"value": "7895"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deposite to Agent",
			"item": [
				{
					"name": "Deposite to Agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deposit successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Deposit successful\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"{{agentPhone}}\",\r\n    \"amount\":10000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposite to Invalid account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Account does not exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Account does not exist\");\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"kj\",\r\n    \"amount\":10000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposite from Invalid Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Account does not exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Account does not exist\");\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"HELL\",\r\n    \"to_account\":\"01706148600\",\r\n    \"amount\":10000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposite  Unavailable Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Insufficient balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Insufficient balance\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"01706148600\",\r\n    \"amount\":1000000000000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposite  Balance Less then 10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Minimum deposit amount 10 tk\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Minimum deposit amount 10 tk\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"01706148600\",\r\n    \"amount\":5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposite Negative  Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Minimum deposit amount 10 tk\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Minimum deposit amount 10 tk\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"01706148600\",\r\n    \"amount\":-50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deposite to Customer",
			"item": [
				{
					"name": "Deposite to Customer 1 form customer 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Only Agent can deposit money\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Only Agent can deposit money\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{UserPhone1}}\",\r\n    \"to_account\":\"{{UserPhone2}}\",\r\n    \"amount\":2000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposite to Customer 1 from agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deposit successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Deposit successful\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{agentPhone}}\",\r\n    \"to_account\":\"{{UserPhone2}}\",\r\n    \"amount\":2000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposite to Customer 1 from agent Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deposit successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Deposit successful\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{agentPhone}}\",\r\n    \"to_account\":\"{{UserPhone1}}\",\r\n    \"amount\":2000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposite to Invalid Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Account does not exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Account does not exist\");\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{agentPhone}}\",\r\n    \"to_account\":\"NULL\",\r\n    \"amount\":200\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposite to Valid ACC form Invalid ACC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Account does not exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Account does not exist\");\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"NULL\",\r\n    \"to_account\":\"01917052951\",\r\n    \"amount\":200\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposite Unavailable Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Insufficient balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Insufficient balance\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01706148600\",\r\n    \"to_account\":\"01917052951\",\r\n    \"amount\":20000000000000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposite Balance Less then 10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Minimum deposit amount 10 tk\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Minimum deposit amount 10 tk\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01706148600\",\r\n    \"to_account\":\"01917052951\",\r\n    \"amount\":5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposite Negative Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Minimum deposit amount 10 tk\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Minimum deposit amount 10 tk\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01706148600\",\r\n    \"to_account\":\"01917052951\",\r\n    \"amount\":5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Check Balance",
			"item": [
				{
					"name": "Check Agent Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/transaction/balance/{{agentPhone}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{agentPhone}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Customer Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/transaction/balance/{{UserPhone1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{UserPhone1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Customer Balance Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/transaction/balance/{{UserPhone2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{UserPhone2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Invalid ACC Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/transaction/balance/0191",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"balance",
								"0191"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Balance Withdraw",
			"item": [
				{
					"name": "Balance WIdthdraw by Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Withdraw successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Withdraw successful\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{UserPhone1}}\",\r\n    \"to_account\":\"{{agentPhone}}\",\r\n    \"amount\":40\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/withdraw",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Balance WIdthdraw from Customer to Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Customer can not withdraw money from another customer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Customer can not withdraw money from another customer\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{UserPhone1}}\",\r\n    \"to_account\":\"{{UserPhone2}}\",\r\n    \"amount\":40\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/withdraw",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Balance WIdthdraw by Customer  to Invalid Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Account does not exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Account does not exist\");\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01917052951\",\r\n    \"to_account\":\"NULL\",\r\n    \"amount\":40\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/withdraw",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Balance WIdthdraw by Invalid Customer  to valid Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Account does not exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Account does not exist\");\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"NULL\",\r\n    \"to_account\":\"01706148600\",\r\n    \"amount\":40\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/withdraw",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "WIdthdraw Unavailable Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Insufficient balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Insufficient balance\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01917052951\",\r\n    \"to_account\":\"01706148600\",\r\n    \"amount\":4000000000000000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/withdraw",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "WIdthdraw Balance less then 10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Minimum withdraw amount 10 tk\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Minimum withdraw amount 10 tk\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01917052951\",\r\n    \"to_account\":\"01706148600\",\r\n    \"amount\":4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/withdraw",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "WIdthdraw Negative Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Minimum withdraw amount 10 tk\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Minimum withdraw amount 10 tk\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01917052951\",\r\n    \"to_account\":\"01706148600\",\r\n    \"amount\":-4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/withdraw",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Send Money",
			"item": [
				{
					"name": "Send Money to Customer from customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Send money successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Send money successful\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{UserPhone1}}\",\r\n    \"to_account\":\"{{UserPhone2}}\",\r\n    \"amount\":15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/sendmoney",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Money to Customer from Agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"From/To account should not be an agent account\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"From/To account should not be an agent account\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{agentPhone}}\",\r\n    \"to_account\":\"{{UserPhone1}}\",\r\n    \"amount\":15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/sendmoney",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Money to Invalid Customer from Valid customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"From/To Account does not exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"From/To Account does not exist\");\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01917052951\",\r\n    \"to_account\":\"NULL\",\r\n    \"amount\":15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/sendmoney",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Money to valid Customer from Invalid customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"From/To Account does not exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"From/To Account does not exist\");\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"NULL\",\r\n    \"to_account\":\"01929538871\",\r\n    \"amount\":15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/sendmoney",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Unavailable Money",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Insufficient balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Insufficient balance\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01917052951\",\r\n    \"to_account\":\"01929538871\",\r\n    \"amount\":150000000000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/sendmoney",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send  Money less then 10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Minimum amount 10 tk\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Minimum amount 10 tk\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01917052951\",\r\n    \"to_account\":\"01929538871\",\r\n    \"amount\":1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/sendmoney",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send  Money Negative balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Minimum amount 10 tk\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Minimum amount 10 tk\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01917052951\",\r\n    \"to_account\":\"01929538871\",\r\n    \"amount\":-1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/sendmoney",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjczODY4NjgzLCJleHAiOjE2NzM4NzA0ODN9.U5kDObnaY1epOlybnL82Sy6maHp5C_Z_9Vgn-k97Kpg"
		},
		{
			"key": "secretKey",
			"value": "ROADTOSDET",
			"type": "string"
		},
		{
			"key": "id",
			"value": 594
		},
		{
			"key": "agentID",
			"value": 608
		},
		{
			"key": "agentPhone",
			"value": "913-719-1286"
		},
		{
			"key": "id1",
			"value": 609
		},
		{
			"key": "UserPhone1",
			"value": "981-440-2373"
		},
		{
			"key": "id2",
			"value": 610
		},
		{
			"key": "UserPhone2",
			"value": "896-822-5719"
		}
	]
}